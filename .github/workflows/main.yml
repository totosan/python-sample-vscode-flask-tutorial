# This is a basic workflow to help you get started with Actions

name: CI_CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    environment: DOCKER
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        uses: docker/login-action@v1.8.0
        with:
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKER_NAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@e1b7f96249f2e4c8e4ac1519b9608c0d48944a1f
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_NAME }}/mylocaltest:${{ github.SHA }}
      
  delpoy:
    runs-on: ubuntu-latest
    needs: build
    
    env:
      AppName: github-actions
      
    environment: test
    
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZ_SP_CREDENTIALS }}
    
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          # Name of the Azure Web App
          app-name: ${{ env.AppName }}
          # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
          images: docker.io/${{ secrets.DOKCER_NAME }}/mylocaltest:${{ github.SHA }}

      - name: Set Web App ACR authentication
        uses: Azure/appservice-settings@v1
        with:
         app-name: '${{ env.AppName }}'
         app-settings-json: |
           [
               {
                   "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                   "value": "${{ secrets.DOCKER_PASSWORD }}",
                   "slotSetting": false
               },
               {
                   "name": "DOCKER_REGISTRY_SERVER_URL",
                   "value": "https://docker.io",
                   "slotSetting": false
               },
               {
                   "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                   "value": "${{ secrets.DOCKER_NAME  }}",
                   "slotSetting": false
               }
           ]
